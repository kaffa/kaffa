<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>- 技术</title><link href="https://kaffa.im/" rel="alternate"></link><link href="https://kaffa.im/feeds/ji-zhu.atom.xml" rel="self"></link><id>https://kaffa.im/</id><updated>2019-04-24T12:00:00+08:00</updated><entry><title>关于计算机科学</title><link href="https://kaffa.im/about-computer-science.html" rel="alternate"></link><published>2019-04-24T12:00:00+08:00</published><updated>2019-04-24T12:00:00+08:00</updated><author><name>Kaffa</name></author><id>tag:kaffa.im,2019-04-24:/about-computer-science.html</id><summary type="html">&lt;p&gt;简单讲述计算机科学的理解&lt;/p&gt;</summary><content type="html">&lt;p&gt;首先我想说说心理学。&lt;/p&gt;
&lt;p&gt;人们对世界好奇、追寻和探索，其间总会发现，许多疑问和障碍并不在外部，而在于内在。所以，德尔菲神庙上镌刻着阿波罗神谕“认识你自己”。人类对内在心灵、灵魂的探索最初来自于宗教、神学和哲学，那些认知的结论，在许多世纪之前，类似强力的光柱透过彩窗从不同角度射入黑暗将空间照亮，人们从不同面提出对这门学科的理解。&lt;/p&gt;
&lt;p&gt;直到冯特采用科学实验的方式进行心理研究才奠定现代意义的心理学基础，它研究人的心灵和行为的关系，其建构在科学实验和行为统计之上，现代前沿的是实验心理学和认知心理学。很多研究，比如对神经元和人类学习的研究，直接促成了模式匹配、机器统计学习和人工神经网络的发展。&lt;/p&gt;
&lt;p&gt;科学在高处相通，从学科的分层，心理学分为理论心理学和应用心理学，而计算机科学也可分为理论部分和应用部分。&lt;/p&gt;
&lt;p&gt;从理论部分说，计算机科学是通过理论计算机研究信息处理的科学，其实和实体计算机的关联并不大，它更偏向于数学、逻辑、计算理论和信息理论。&lt;/p&gt;
&lt;p&gt;由于计算科学和信息科学并不在大众常识范围内，所以大多数人的理解，学计算机科学毕业，大约应该是学会了装电脑用。:-(&lt;/p&gt;
&lt;p&gt;从应用层面说，计算机科学又包含，计算机工程学和商业计算机系统。前者是研究计算机硬件和集成固件，后者是信息系统。&lt;/p&gt;
&lt;p&gt;现代，数据、信息和计算如此重要，计算机应用几乎能和所有学科交叉、相互促进。&lt;/p&gt;
&lt;p&gt;现代计算机硬件和操作系统软件的出现是理论计算机和计算机工程学的完美配合，前者是说邱奇-图灵的图灵机和可计算性理论，后者是说冯·诺依曼和 ENIAC，第一台存储程序计算机模型的大型计算机。&lt;/p&gt;
&lt;p&gt;也许大多数人觉得计算机能计算处理信息不可思议，但除开电器层次和复杂性，在其本质上，依旧还是图灵的代表0和1的无限伸展的纸带和冯·诺依曼对理论计算机的工程实现。&lt;/p&gt;
&lt;p&gt;发展了 80 多年的计算科学，其实核心一成不变，是的，毫不令人惊讶，因为世界降生一位像图灵一样，有野心、有才华、还努力、还开挂的天才并不容易，只有这样的天才的头脑中，才会诞生理论计算机。&lt;/p&gt;
&lt;p&gt;为什么计算的核心一成不变，其实中国《易经》六十四卦即类似的算法表述——二分法（将在未来专写一篇），也是超越各种语言和思维的通用思维方式。&lt;/p&gt;
&lt;p&gt;这就是——易——宇宙的逻辑，无论事物表像多么的不同。&lt;/p&gt;
&lt;p&gt;此处，作个总结：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;计算机科学：Computer Science，简称 CS&lt;/p&gt;
&lt;p&gt;所有有关计算机科学及子学科的总称，是系统性研究信息与计算的理论基础以及计算机系统实现与应用的技术学科。现代主要研究领域有：
&lt;em&gt; 人工智能
&lt;/em&gt; 计算机体系结构
&lt;em&gt; 人机交互
&lt;/em&gt; 软件工程
&lt;em&gt; 数据与数据库
&lt;/em&gt; 多媒体（计算机图形学）
&lt;em&gt; 网络
&lt;/em&gt; 信息安全
&lt;em&gt; 管理信息系统
&lt;/em&gt; 生物信息
* 计算理论&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;电子工程：Electronic Engineering，简称 EE&lt;/p&gt;
&lt;p&gt;以电子学、电磁学等物理学分支为基础，涵盖电子学、电子计算机的工程学。主要的研究分支：
&lt;em&gt; 通信与网络
&lt;/em&gt; 信号处理
&lt;em&gt; 电子学
&lt;/em&gt; 集成电路
* 光电子与光学&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;软件工程学：Software Engineering，简称 SE&lt;/p&gt;
&lt;p&gt;研究如何以科学过程和方法去开发和维护软件的科学，以及如何把经过时间考验而证明正确的管理技术和当前能够得到的最佳实践结合起来的学科。是CS的分支领域，该方向因为开发软件和软件项目变得很热门，也是跟软件工程师最近的方向。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;信息技术：Information Technology，简称 IT&lt;/p&gt;
&lt;p&gt;主要用上述学科知识应用到具体行业，开发、安装和实施信息系统及应用软件。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;无论承不承认，上述四个方向其实是具有线性关系的。&lt;/p&gt;
&lt;p&gt;感谢各位大佬围观。&lt;/p&gt;
&lt;p&gt;&lt;img alt="我的赞赏码" src="https://kaffa.im/img/reward.png" title="我的赞赏码" /&gt;&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>关于滑块验证码的思路</title><link href="https://kaffa.im/some-thoughts-on-reCAPTCHA.html" rel="alternate"></link><published>2019-04-17T12:00:00+08:00</published><updated>2019-04-17T12:00:00+08:00</updated><author><name>Kaffa</name></author><id>tag:kaffa.im,2019-04-17:/some-thoughts-on-reCAPTCHA.html</id><summary type="html">&lt;p class="first last"&gt;本文描述关于自动通过滑块验证码验证的思路&lt;/p&gt;
</summary><content type="html">&lt;div class="section" id="id2"&gt;
&lt;h2&gt;图灵测试&lt;/h2&gt;
&lt;p&gt;图灵测试是一个著名的思想实验，它要解决的问题是如何判断一台机器是否具有智能。&lt;/p&gt;
&lt;p&gt;简单的讲，就是把判定对象看做黑盒，人与其对话，如果人分辨不出被判定对象是否是机器的话，就算它通过了图灵测试。&lt;/p&gt;
&lt;p&gt;而“&lt;a class="reference external" href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E6%96%87%E6%88%BF%E9%97%B4"&gt;中文房间&lt;/a&gt;”思想实验，即呈现了图灵测试的局限——即使机器实现了智能外在的输入输出，内在结构也可以不是智能。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;滑块验证码&lt;/h2&gt;
&lt;p&gt;软件安全技术的攻击与防守就好比矛和盾，随着技术的更新，此消彼长。&lt;/p&gt;
&lt;p&gt;由于自动化技术的发展，脚本加本地代码已可以解决没有技术门槛的人类验证。二十年前，只要懂脚本，就可以让计算机自动做很多事；十六年前，Luis 在发明了验证码，
我也曾在 Google Code 中下载 &lt;a class="reference external" href="https://code.google.com/archive/p/tesseract-ocr/"&gt;tesseract-ocr&lt;/a&gt; 以解决中文验证码，但 Gooogle 的 reCAPTCHA 确实很扭曲，却是鲜有人破解。&lt;/p&gt;
&lt;p&gt;但随着 AI 机器学习技术的发展，扭曲文字的自动识别难点已被攻破。在多年前的某天，滑块验证码出现了，技术社区讨论如火如荼。&lt;/p&gt;
&lt;p&gt;稍微几年未关注，这个领域除了巨头，还产出了 API 售卖 reCAPTCHA 的小而美的公司，比如`极验`_。&lt;/p&gt;
&lt;p&gt;GitHub 中也有不少破解其旧版本的代码，虽然没有查看其新版本，但可以简单谈谈绕过的思路。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;解决思路&lt;/h2&gt;
&lt;p&gt;可以从网络层、系统层和用户层来考虑：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;网络层：此类验证，最后发送的数据一定需要加密，难点在于对付 js 的混淆，通过单步调试找到加密前的数据。理解数据，或直接采集多组数据，再模拟发送即可。这一种思路对耐心的要求很高。&lt;/li&gt;
&lt;li&gt;系统层：通过程序抓图和图像运算比对，计算出键盘鼠标的操作即可，这一种相对比较容易，但速度不如网络层解决快。&lt;/li&gt;
&lt;li&gt;用户层：采用软硬件结合的极客思路，用摄像头进行视觉采集，用机器手操纵鼠标，完全模拟一个有智能的会操作键盘和鼠标的人，这种可能是最一劳永逸，但门槛最高的思路。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="Tech"></category><category term="GeeTest"></category></entry></feed>
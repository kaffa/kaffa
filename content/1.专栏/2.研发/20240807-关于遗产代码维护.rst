关于遗产代码维护
##################################################

:date: 2024-08-07 12:00
:author: Kaffa
:category: development
:tags: legacy code
:slug: legacy-code-maintenance
:summary: 本文记录前两周维护遗产代码的心得。
:image: /static/img/2024/legacy-code-maintenance.png


十七年前的代码
====================

如果有机会维护了十七年前的代码，你一定能学到很多。

我维护的是 Windows 2008 下 PHP 5、MySQL 5、Apache 2.2、Python 3 的代码。

总结了一下，首先需要了解平台规格，运行时最小化支持版本。

Windows 2008
====================

Windows 2008 不算很旧的服务器，毕竟我还用过 Windows 2000、Windows 2003。

准备环境，开始十分不方便，依次下载 7-zip、Firefox、Python，一个带高亮的文本编辑器，然后方便多了。

Windows 2008 在 Python 方面最高支持 Python 3.4。

安装 pip，会提示下载一个旧版本的 get-pip.py，使用旧版本 get-pip.py 后，终于可以安装一些旧版本包。

但需要编译的包，还会依赖旧版本的 VSBuild 环境。

某些旧版本包，国内镜像不支持，估计是没有全部镜像的缘故。

整理这些复杂的依赖关系，就够喝一壶了。

而 PHP 5、MySQL 5、Apache 2.2 相对就好一些，我还能在我本机找到一套配置好的，其中包含了 Zend 优化和 XDebug。

这些源代码估计还在，但若要凑上相互配合一套，要自己编辑时，准备环境这件事来说，拿给小白，没几周是不够的。

预计十年后，我也许还会维护升级这些代码，若有时间，放到虚拟机中更好，可以不受硬件限制的启动，而直接进入环境。

最大的心得
====================

之所以现在还能维护，主要是因为之前我也是亲自配置的，具有经验，另外，多年之前考虑过维护，作了少量当时环境的打包。

若让一位无经验的人配合 AI 完成这些，也会有不少坑。



<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Kaffa - 日志</title><link href="https://kaffa.im/" rel="alternate"></link><link href="https://kaffa.im/feeds/ri-zhi.atom.xml" rel="self"></link><id>https://kaffa.im/</id><updated>2018-08-10T12:20:00+08:00</updated><entry><title>为博客添加评论系统</title><link href="https://kaffa.im/add-comments-system-to-my-blog.html" rel="alternate"></link><published>2018-08-10T12:20:00+08:00</published><updated>2018-08-10T12:20:00+08:00</updated><author><name>Kaffa</name></author><id>tag:kaffa.im,2018-08-10:/add-comments-system-to-my-blog.html</id><summary type="html">&lt;p class="first last"&gt;为博客添加评论系统&lt;/p&gt;
</summary><content type="html">&lt;div class="section" id="id2"&gt;
&lt;h2&gt;评论系统&lt;/h2&gt;
&lt;p&gt;通俗地说，不同人在一起评论一个事时，就像对混沌系统作预测，最可能的结果就是一团糟。
好在评论系统有效的过滤了人群，原来的多说，网易云跟帖，以及被蔷的 &lt;a class="reference external" href="https://www.disqus.com/"&gt;Disqus&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;时下，如果想欣赏真正的“杠精”，要去“即刻”看评论，去网易新闻看跟帖；因为 &lt;a class="reference external" href="https://www.disqus.com/"&gt;Disqus&lt;/a&gt; 不存在，
Google &lt;a class="reference external" href="https://firebase.google.com/"&gt;Firebase&lt;/a&gt; 方案也不存在，那 GitHub 静态博客的评论，就剩下几个为数不多的免费方案，
例如 &lt;a class="reference external" href="https://github.com/imsun/gitment"&gt;Gitment&lt;/a&gt; 和 &lt;a class="reference external" href="https://github.com/gitalk/gitalk"&gt;Gitalk&lt;/a&gt;，gitment 是鼻祖，gitalk 是后来者，看起来两者差不太多，
相当于利用 GitHub 应用授权 api 编写了一个跨域提 issue 的客户端。&lt;/p&gt;
&lt;p&gt;论安全性，这种做法的安全前提是服务端对提交信息的安全验证，且有人已提交一个次级域名利用方式。
但我相信伪造评论、越权访问普通人的私有库并无太大价值，这其中只见伤害，并无收益。
所以，这种安全性是可以定为相对安全。&lt;/p&gt;
&lt;p&gt;在“深网”的世界里，人性恶的一面使然，什么都会发生，如果完全不限安全，多少有一些理想主义，
但可以相信人性也有善面，在软件的世界里，建造永远比破坏更难，建造是一个工程，而破坏只是一次行动。&lt;/p&gt;
&lt;p&gt;为 Pelican 添加 Gitalk 评论系统最简单的方式，莫过于在 &lt;tt class="docutils literal"&gt;theme\templates\article.html&lt;/tt&gt; 中直接修改，
亦或编写一个 Pelican 插件，实现 &lt;a class="reference external" href="http://docs.getpelican.com/en/stable/plugins.html#list-of-signals"&gt;article_generator_finalized&lt;/a&gt; signal，
读取 clientID 和 clientSecret 等配置在文后插入，如果手动插入，则是在 &lt;tt class="docutils literal"&gt;&amp;lt;/article&amp;gt;&lt;/tt&gt; 之前:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;lt;div id=&amp;quot;gitalk-container&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;https://unpkg.com/gitalk/dist/gitalk.css&amp;quot;&amp;gt;
&amp;lt;script src=&amp;quot;https://unpkg.com/gitalk/dist/gitalk.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;
var gitalk = new Gitalk({
    clientID: 'your client id here',
    clientSecret: 'your client secret here',
    repo: 'kaffa.github.io',
    owner: 'kaffa',
    admin: ['kaffa'],
    id: location.pathname.substr(0, 50),
    distractionFreeMode: false
});
gitalk.render('gitalk-container');
&amp;lt;/script&amp;gt;
&lt;/pre&gt;
&lt;p&gt;想为 Pelican 添加 Gitalk 评论的人，如果遇到问题，可以本文 issue 我，网上并不容易找着傻瓜教程。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;博客历史&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;2018-06-06，博客启动，添加域名 &lt;a class="reference external" href="https://kaffa.im"&gt;https://kaffa.im&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018-08-07，&lt;a class="reference external" href="https://github.com/MrSenko/pelican-octopress-theme"&gt;octopress 主题&lt;/a&gt; 中文化：&lt;a class="reference external" href="https://github.com/kaffa/pelican-octopress-theme-cn"&gt;pelican-octopress-theme-cn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2018-08-10，添加 gitalk 评论系统。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;感谢观阅，如果您觉得有用，可以扫我的赞赏码，鼓励一杯咖啡。&lt;/p&gt;
&lt;img alt="我的赞赏码" src="https://kaffa.im/img/reward.png" /&gt;
&lt;/div&gt;
</content><category term="随笔"></category><category term="Essays"></category><category term="博客"></category><category term="My Blog"></category><category term="Pelican"></category><category term="Gitalk"></category><category term="Gitment"></category></entry><entry><title>更新博客主题</title><link href="https://kaffa.im/update-my-new-blog-s-theme.html" rel="alternate"></link><published>2018-08-07T08:20:00+08:00</published><updated>2018-08-07T08:20:00+08:00</updated><author><name>Kaffa</name></author><id>tag:kaffa.im,2018-08-07:/update-my-new-blog-s-theme.html</id><summary type="html">&lt;p class="first last"&gt;更新博客主题&lt;/p&gt;
</summary><content type="html">&lt;div class="section" id="id2"&gt;
&lt;h2&gt;关于本博客&lt;/h2&gt;
&lt;p&gt;2018-06-06，开始这个新博客&lt;/p&gt;
&lt;p&gt;2018-08-07，转眼间两个月了，原先使用的 &lt;a class="reference external" href="https://github.com/MrSenko/pelican-octopress-theme"&gt;octopress 主题&lt;/a&gt; 也发现一些样式上的缺陷，于是抽空对它做了中文化。地址见:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
`pelican-octopress-theme-cn`_
&lt;/pre&gt;
&lt;p&gt;感谢观阅，如果您觉得有用，可以扫我的赞赏码，鼓励一杯咖啡。&lt;/p&gt;
&lt;img alt="我的赞赏码" src="https://kaffa.im/img/reward.png" /&gt;
&lt;/div&gt;
</content><category term="随笔"></category><category term="Essays"></category><category term="博客"></category><category term="My Blog"></category><category term="Pelican Octopress Theme"></category><category term="pelican-octopress-theme-cn"></category></entry><entry><title>为 GitHub Pages 站点添加独立域名</title><link href="https://kaffa.im/custom-domain-of-github-pages-site.html" rel="alternate"></link><published>2018-06-19T17:17:00+08:00</published><updated>2018-06-19T17:17:00+08:00</updated><author><name>Kaffa</name></author><id>tag:kaffa.im,2018-06-19:/custom-domain-of-github-pages-site.html</id><summary type="html">&lt;p class="first last"&gt;本文记录为 GitHub Pages 站点添加独立域名的步骤和遇到的问题&lt;/p&gt;
</summary><content type="html">&lt;div class="section" id="id1"&gt;
&lt;h2&gt;添加独立域名的步骤&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;注册一个域名&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;选择你喜欢的域名商注册一个域名。
例如，我注册的是 kaffa.im&lt;/p&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;域名解析&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在域名配置中添加一条 CNAME 记录。
例如，将 kaffa.im 指向 kaffa.github.io，此时，访问 kaffa.im 会得到 Github 反馈的 404 错误页面&lt;/p&gt;
&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;添加 CNAME 文件&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在 Github 仓库 master 的根目录下添加一个名称为 &lt;strong&gt;CNAME&lt;/strong&gt; 的文件，文件内容为你注册的域名。
例如，在 kaffa.github.io 仓库 master 的根目录新建一个 &lt;a class="reference external" href="https://github.com/kaffa/kaffa.github.io/blob/master/CNAME"&gt;CNAME&lt;/a&gt; 文件，文件内容为 kaffa.im，刷新刚才的 404 页面即打开了原先的 kaffa.github.io 站点&lt;/p&gt;
&lt;p&gt;感谢观阅，如果您觉得有用，可以扫我的赞赏码，鼓励一杯咖啡。&lt;/p&gt;
&lt;img alt="我的赞赏码" src="https://kaffa.im/img/reward.png" /&gt;
&lt;/div&gt;
</content><category term="随笔"></category><category term="Essays"></category><category term="博客更新"></category><category term="Blog Update"></category><category term="自定义域名"></category><category term="Technology"></category><category term="Custom Domain"></category><category term="GitHub Pages"></category><category term="CNAME"></category></entry><entry><title>新博客</title><link href="https://kaffa.im/about-my-new-blog.html" rel="alternate"></link><published>2018-06-06T10:20:00+08:00</published><updated>2018-06-06T10:20:00+08:00</updated><author><name>Kaffa</name></author><id>tag:kaffa.im,2018-06-06:/about-my-new-blog.html</id><summary type="html">&lt;p class="first last"&gt;我的新博客&lt;/p&gt;
</summary><content type="html">&lt;div class="section" id="id2"&gt;
&lt;h2&gt;关于本博客&lt;/h2&gt;
&lt;p&gt;2018-06-06，新的一天，新博客，这里将主要记录我的笔记和想法，以及兴趣。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id3"&gt;
&lt;h2&gt;本博客采用的技术&lt;/h2&gt;
&lt;p&gt;本博客采用基于 &lt;a class="reference external" href="https://www.python.org/"&gt;Python&lt;/a&gt; 语言的 &lt;a class="reference external" href="https://getpelican.com/"&gt;Pelican&lt;/a&gt; 库的 &lt;a class="reference external" href="https://github.com/MrSenko/pelican-octopress-theme"&gt;octopress 主题&lt;/a&gt; 来生成。&lt;/p&gt;
&lt;p&gt;一般来说，静态博客就是一堆按目录存放的 html/css/js 及图片等静态文件组成的页面。在互联网刚兴起的那些年，第一批互联网站长利用 Microsoft FrontPage 和 Adobe Dreamweaver 等开发工具制作网站，随着 Web 的发展，几乎每一种语言都有人编写了专门的库用来维护这样的 &lt;a class="reference external" href="https://staticsitegenerators.net/"&gt;静态站点&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;我近些年主要用 Python 完成一些代码，因此选用了 Python 语言的 Pelican 库，类似的托管在 Github Pages 的默认库是基于 &lt;a class="reference external" href="https://www.ruby-lang.org/"&gt;Ruby&lt;/a&gt; 语言的 &lt;a class="reference external" href="https://jekyllrb.com/"&gt;Jekyll&lt;/a&gt;，而 Pelican 更有优势的地方是除了支持 &lt;a class="reference external" href="https://daringfireball.net/projects/markdown/"&gt;Markdown&lt;/a&gt;，还支持 &lt;a class="reference external" href="http://docutils.sourceforge.net/rst.html"&gt;reStructuredText&lt;/a&gt; 和 &lt;a class="reference external" href="http://www.methods.co.nz/asciidoc/"&gt;AsciiDoc&lt;/a&gt; 格式。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;本博客采用的技术的相关链接&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://blog.getpelican.com/"&gt;Pelican blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/getpelican"&gt;Pelican dev team&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/getpelican/pelican-plugins"&gt;Pelican plugins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/getpelican/pelican-themes"&gt;Pelican themes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="todo"&gt;
&lt;h2&gt;和很多静态博客一样也留下 TODO 吧&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;采用渐进增强添加国家地理的 &lt;a class="reference external" href="https://www.nationalgeographic.com/photography/photo-of-the-day/?source=sitenavpod"&gt;每日一图&lt;/a&gt; 作为随机背景&lt;/li&gt;
&lt;li&gt;将 Jekyll 的 &lt;a class="reference external" href="https://taylantatli.github.io/Moon/"&gt;Moon 主题&lt;/a&gt; 迁移到 Pelican&lt;/li&gt;
&lt;li&gt;添加一些需要 &lt;a class="reference external" href="https://github.com/getpelican/pelican-plugins"&gt;Pelican plugins&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;感谢观阅，如果您觉得有用，可以扫我的赞赏码，鼓励一杯咖啡。&lt;/p&gt;
&lt;img alt="我的赞赏码" src="https://kaffa.im/img/reward.png" /&gt;
&lt;/div&gt;
</content><category term="随笔"></category><category term="Essays"></category><category term="博客"></category><category term="My Blog"></category><category term="博客更新"></category><category term="Blog Update"></category><category term="标记语言"></category><category term="Pelican"></category><category term="octopress"></category><category term="Markdown"></category><category term="reStructuredText"></category><category term="AsciiDoc"></category></entry></feed>
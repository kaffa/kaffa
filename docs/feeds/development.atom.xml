<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Kaffa.im - development</title><link href="https://kaffa.im/" rel="alternate"></link><link href="https://kaffa.im/feeds/development.atom.xml" rel="self"></link><id>https://kaffa.im/</id><updated>2023-12-14T12:00:00+08:00</updated><entry><title>工程师、程序员和码农</title><link href="https://kaffa.im/engineers-programmer-and-code-farmers.html" rel="alternate"></link><published>2023-12-14T12:00:00+08:00</published><updated>2023-12-14T12:00:00+08:00</updated><author><name>Kaffa</name></author><id>tag:kaffa.im,2023-12-14:/engineers-programmer-and-code-farmers.html</id><summary type="html">&lt;p class="first last"&gt;本文集中辨析了程序员这种物种的多种称谓。&lt;/p&gt;
</summary><content type="html">&lt;div class="section" id="section-2"&gt;
&lt;h2&gt;新开“研发”和“编程”栏目&lt;/h2&gt;
&lt;p&gt;从长期主义视角出发，思考再三，将原本规划到独立站点的研发和编程内容放入此站。&lt;/p&gt;
&lt;p&gt;增加了“研发”和“编程”新栏目，定位是：&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;研发：内容包含研发活动，内部和外部，比如软件工程、研发流程&lt;/li&gt;
&lt;li&gt;编程：主要内容包含编程本身及关联活动。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本来这两者之间没有明显差别，会视内容侧重后决定分类。&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="section-3"&gt;
&lt;h2&gt;《笠翁对韵》有云&lt;/h2&gt;
&lt;pre class="literal-block"&gt;
云对雨，雪对风，晚照对晴空。
来鸿对去燕，宿鸟对鸣虫。
&lt;/pre&gt;
&lt;p&gt;在 IT 界中，程序员的称谓，也有着不一样的对韵。&lt;/p&gt;
&lt;p&gt;码农的是:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
C对V，赶对吹，代码对注释。
rm对rf，drop对purge，删库对跑路。
&lt;/pre&gt;
&lt;p&gt;程序员的是:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
一对零，堆对栈，列表对字典。
分配对释放，穷举对剪枝。
&lt;/pre&gt;
&lt;p&gt;工程师的是:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
预对估，分对拆，重写对重构。
开发对测试，项目对产品。
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class="section" id="vs"&gt;
&lt;h2&gt;工程师、程序员和码农 vs 研发、编程和编码&lt;/h2&gt;
&lt;p&gt;称谓的差异背后是角色不同，代表工作或行为背后的的目的和责任不同。初看完一个笑话，但仔细想想，除开码农这个戏谑的称谓，工程师和程序员的工作内容是有大量重合。&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;工程师：主要负责搞定程序研发这件事，有对工程成败的责任；&lt;/li&gt;
&lt;li&gt;程序员：主要负责搞定程序；&lt;/li&gt;
&lt;li&gt;码农：负全责。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在不同职业阶段，可能你也做过这些角色。坦率地说，当你的主要视角集中在事上时，一般，你就是个工程师没准了；主要视角是写程序，那你是个程序员；当你不带视角，或者以为你的视角是事或者写程序时，那你肯定是个码农无疑了。&lt;/p&gt;
&lt;p&gt;工程师负责研发，会开发软件硬件，会编程，但编码往往只占 20% 工作时间，其余的时间会做决(mo)策(yu)；程序员负责设计和编程，编码往往占 20% 工作时间，其余的时间在测(mo)试(yu)，但所有编程的问题由程序和搞定；码农主要负责敲代码，编码往往占 80% 工作时间，其余 10% 时间在思考编码，剩余 10% 在思考或假设 GF 的事。（你也看出来了，这里是个笑话。）&lt;/p&gt;
&lt;p&gt;那么，你想做一名攻城狮、程序猿或是马农呢？有诗云：施氏食狮史，季姬击鸡记，产品汪改改，新猿一码农。其实，我国人社有发：“从事信息传输、软件和信息技术服务业的新生代农民工占比大幅提高”的说法。无论从逻辑上怎么理解，软件在我国，只有少量能属于工业，大量都是属于服务业，按照上游的约定，将业务用代码描述出来罢了，大部分狮不用考虑业务量变带来的质变，因为想考虑也考虑不了，那是少部分塔顶狮的不传之秘。&lt;/p&gt;
&lt;p&gt;当一个人做事时，项目其实不重要，工程师、程序员都光辉都褪去了，剩下你自己，其实就是自己负全责的牛车水马龙。&lt;/p&gt;
&lt;p&gt;我想，英文国家的人即使借助翻译也很难弄懂本文，比如码农的翻译，其实用 coders 更好，但没有表达出中文语境的双关，而 slug 中用的 code farmers 也不准确， farmer 的意思是农场主，而更接近的意思其实是 code peasants。但现代其实很少使用 peasant，尤其在英文语境。因此 slug 最终选定了 code farmers&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="section-4"&gt;
&lt;h2&gt;图片版权&lt;/h2&gt;
&lt;a href="https://www.freepik.com/free-vector/programmer-work-place-with-man-table-top-view-sketch_2872064.htm#page=3&amp;query=programmer&amp;position=3&amp;from_view=search&amp;track=sph&amp;uuid=54ce2628-2acb-4392-a73a-9a6e4429b1e8"&gt;Image by macrovector&lt;/a&gt; on Freepik&lt;/div&gt;
</content><category term="development"></category><category term="Development"></category><category term="Programming"></category></entry><entry><title>VSCode Insert Filename</title><link href="https://kaffa.im/vscode-extension-insert-filename.html" rel="alternate"></link><published>2019-07-23T12:00:00+08:00</published><updated>2023-11-08T15:00:00+08:00</updated><author><name>Kaffa</name></author><id>tag:kaffa.im,2019-07-23:/vscode-extension-insert-filename.html</id><summary type="html">&lt;p&gt;本文是我为讲解如何发布 VSCode 扩展到 Visual Studio Marketplace 而编写的插件VSCode Insert Filename，通过本文你将学会创作和发布 VSCode 扩展的步骤和方法。&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="编写 VSCode 插件" src="https://kaffa.im/static/img/2019/create-vscode-extension.png" title="编写 VSCode 插件"&gt;&lt;/p&gt;
&lt;h2&gt;假设&lt;/h2&gt;
&lt;p&gt;假设你熟悉 node.js 和 npm 工具，用过 Git，并懂点 JavaScript，那么本文将一步步教你编写一个 VSCode 扩展，并发布到微软 Visual Studio Marketplace。&lt;/p&gt;
&lt;h2&gt;概述&lt;/h2&gt;
&lt;p&gt;VSCode 已是免费文本编辑器/IDE的王者，但其文本闪改能力还是不如一些老牌文本编辑器，比如 EverEdit 与 EmEditor，但它免费呀，所以，用它用它用它。&lt;/p&gt;
&lt;p&gt;在文本中插入文件名是个常用场景，比如编辑本文时，第一行就会用到，笔者在 EverEdit 和 EmEditor 中编写过脚本插件，基本都只需要一个文件和几行脚本代码。&lt;/p&gt;
&lt;p&gt;考虑到 VSCode 有一个全球生态，那么 Visual Studio Marketplace 中是否能找到一个类似的插件呢，答案是：没有。于是，我们做一个呗。&lt;/p&gt;
&lt;p&gt;&lt;img alt="If not me, who? If not now, when?" src="https://kaffa.im/static/img/2019/if-not-me-who-if-not-now-when.png" title="If not me,  who? If not now, when?"&gt;&lt;/p&gt;
&lt;p&gt;在 VSCode 关于中，我们可以看到它的技术栈如下，其插件采用 JavaScript 或 TypeScript 编写。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Electron: 4.2.5&lt;/li&gt;
&lt;li&gt;Chrome: 69.0.3497.128&lt;/li&gt;
&lt;li&gt;Node.js: 10.11.0&lt;/li&gt;
&lt;li&gt;V8: 6.9.427.31-electron.0&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;具体步骤&lt;/h2&gt;
&lt;p&gt;1、假设你已安装 node.js 和 git&lt;/p&gt;
&lt;p&gt;2、如果你没有用过 Yeoman 脚手架工具，那么现在正是时候，装上它&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm install -g yo generator-code&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;3、利用 Yeoman 建立项目框架&lt;/p&gt;
&lt;p&gt;&lt;code&gt;yo code&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;
    # ? What type of extension do you want to create? New Extension (TypeScript)
    # ? What's the name of your extension? insert-filename
    ### Press &lt;Enter&gt; to choose default for all options below ###
    # ? What's the identifier of your extension? insert-filename
    # ? What's the description of your extension?
    # ? Initialize a git repository? Yes
    # ? Which package manager to use? npm
&lt;/pre&gt;

&lt;p&gt;扩展项目就创建好了，下一步，让我们运行起来。&lt;/p&gt;
&lt;p&gt;4、执行&lt;/p&gt;
&lt;p&gt;&lt;code&gt;code ./insert-filename&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;再按 &lt;code&gt;F5&lt;/code&gt; 运行，这时，VSCode 会启动一个新窗口，这个窗口中 Yeoman 脚手架项目 insert-filename 已经加载了插件。&lt;/p&gt;
&lt;p&gt;5、让我们按下 &lt;code&gt;Ctrl + Shift + P&lt;/code&gt;，输入 &lt;code&gt;insert-filename&lt;/code&gt;，可以看到这条命令，回车后应该可以看到一条 Hello World！的信息在 VSCode 的右下角弹出来。&lt;/p&gt;
&lt;p&gt;6、接着，我们便可以开始编写插入文件名的代码了，还可以调试哟！让我们打开 &lt;code&gt;src/extension.ts&lt;/code&gt; 文件。为便于理解，请参阅中文注释。&lt;/p&gt;
&lt;pre&gt;
    import { commands, workspace, window, ExtensionContext } from 'vscode';

    // 在所有选区中插入文件名
    function replaceEditorSelection() {
        const editor = window.activeTextEditor;
        if (editor === undefined) {
            return;
        }
        const selections = editor.selections;
        editor.edit((editBuilder) =&gt; {
        selections.forEach((selection) =&gt; {
            let url = editor.document.fileName;
            let urlFormatted = url.replace(/\\/g, '/');
            let lastPart = urlFormatted.split('/').pop() || '';
            editBuilder.replace(selection, '');
            editBuilder.insert(selection.active, lastPart);
        });
        );
    }

    // 插件激活
    export function activate(context: ExtensionContext) {
        console.log('Congratulations, your extension "Insert Filename" is now active!');
        // 注册一条命令
        let disposable = commands.registerCommand('extension.insertFilename', () =&gt; replaceEditorSelection());

        context.subscriptions.push(disposable);
    }

    // 插件待用
    export function deactivate() {
        console.log('Your extension "Insert Filename" is now inactive!');
    }
&lt;/pre&gt;

&lt;p&gt;7、其次，最重要的是编辑 package.json 文件，最重要的 contributes 配置，以下配置分别在命令、编辑器右键菜单上注册了此命令，并设置其快捷键。&lt;/p&gt;
&lt;pre&gt;
    "contributes": {
        "commands": [
            {
                "command": "extension.insertFilename",
                "title": "Insert Filename"
            }
        ],
        "menus": {
            "editor/context": [
                {
                    "command": "extension.insertFilename",
                    "group": "extension@1"
                }
            ]
        },
        "keybindings": [
            {
                "command": "extension.insertFilename",
                "key": "ctrl+alt+i",
                "mac": "shift+cmd+i",
                "when": "editorTextFocus"
            }
        ]
    }
&lt;/pre&gt;

&lt;p&gt;8、更详细的代码和配置文件请移步 GitHub 仓库：&lt;a href="https://github.com/kaffa/vscode-insert-filename"&gt;vscode-insert-filename 插件源码&lt;/a&gt; 。&lt;/p&gt;
&lt;h2&gt;编译发布&lt;/h2&gt;
&lt;p&gt;到目前为止，我们的测试都是直接运行插件，现在让我们对项目进行编译，得到 insert-filename-0.0.2.vsix 文件，就可以进行发布了。&lt;/p&gt;
&lt;p&gt;9、为编译插件，我们需要下载微软 VSCode Extension 工具：vsce&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm install -g vsce&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;10、安装完毕后，让我们执行如下指令进行编译&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vsce package&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;11、编译成功后，项目目录中会得到 insert-filename-0.0.2.vsix 文件，再运行如下命令发布&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vsce publish&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;不出意料，你会得到 401 错误，是因为向微软市场发布这个插件，需要一个 &lt;a href="https://marketplace.visualstudio.com/items?itemName=kaffa.insert-filename"&gt;Azure DevOps&lt;/a&gt; 账号，你可以用一个 Microsoft 账号登录跳转注册 &lt;a href="https://marketplace.visualstudio.com/items?itemName=kaffa.insert-filename"&gt;Azure DevOps&lt;/a&gt; 即可。&lt;/p&gt;
&lt;p&gt;接下来，我们不用创建项目，直接在右上角个人头像菜单 &lt;code&gt;Security&lt;/code&gt; 中创建一个 Personal Access Tokens，选项如下，先点击 &lt;code&gt;Show all scopes&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Organization：All accessible organization&lt;/li&gt;
&lt;li&gt;Scopes: Marketplace 中的 Acquire and Manage&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;再点击 &lt;code&gt;Create&lt;/code&gt; 按钮，生成成功后，点击 &lt;code&gt;Copy&lt;/code&gt;，&lt;strong&gt;注意&lt;/strong&gt;：这个Token只会在这个时候出现一次，所以，你得找一个不会忘记的地方记录下来。&lt;/p&gt;
&lt;p&gt;再执行此命令，将其中的 kaffa 换成你的 id，输入刚才创建的 Token&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vsce create-publisher kaffa&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;12、发布&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vsce publish&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;到这里，我们的插件就发布成功了，过几分钟，就可以官网看到你的插件了，并可以在 VSCode 插件中搜索了，记得做一些关键字 SEO，并升级一下版本。&lt;/p&gt;
&lt;h2&gt;总结&lt;/h2&gt;
&lt;p&gt;本插件发布在 &lt;a href="https://marketplace.visualstudio.com/items?itemName=kaffa.insert-filename"&gt;Visual Studio Marketplace&lt;/a&gt;，欢迎下载使用。&lt;/p&gt;
&lt;p&gt;祝各位读者读完本文，能顺利安装、编写、编译、发布你的插件，如果在具体步骤中遇到问题，请回复和留言。&lt;/p&gt;
&lt;p&gt;感谢观阅！&lt;/p&gt;
&lt;p&gt;本站所有写作都是免费的，如果您觉得有用，可以微信扫赞微微鼓励！&lt;/p&gt;
&lt;p&gt;&lt;img alt="我的赞赏码" src="https://kaffa.im/static/img/reward.png" title="一杯咖啡吸取太阳能量"&gt;&lt;/p&gt;</content><category term="development"></category><category term="VSCode Extension"></category><category term="VSCode Insert Filename"></category></entry></feed>